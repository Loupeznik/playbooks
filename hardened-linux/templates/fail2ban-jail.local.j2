# Fail2ban Jail Configuration
# Managed by Ansible - Do not edit manually

[DEFAULT]
# Ban IP for bantime seconds
bantime  = {{ fail2ban_bantime }}

# Window of time for findtime
findtime  = {{ fail2ban_findtime }}

# Number of failures before ban
maxretry = {{ fail2ban_maxretry }}

# Destination email for ban notifications
destemail = {{ fail2ban_destemail }}

# Sender email
sender = {{ fail2ban_sender }}

# Action to take when ban occurs
action = {{ fail2ban_action }}

# Backend for log file monitoring
backend = systemd

# SSH
[sshd]
enabled = true
port    = {{ ssh_port }}
{% if ansible_os_family == 'Debian' %}
logpath = /var/log/auth.log
{% elif ansible_os_family == 'RedHat' %}
logpath = /var/log/secure
{% endif %}
maxretry = {{ fail2ban_maxretry }}

# SSH DDOS
[sshd-ddos]
enabled = true
port    = {{ ssh_port }}
{% if ansible_os_family == 'Debian' %}
logpath = /var/log/auth.log
{% elif ansible_os_family == 'RedHat' %}
logpath = /var/log/secure
{% endif %}
maxretry = 6

{% if 'appservers' in group_names %}
# Nginx HTTP Auth
[nginx-http-auth]
enabled = true
port    = http,https
logpath = /var/log/nginx/error.log
maxretry = 5

# Nginx Limit Request
[nginx-limit-req]
enabled = true
port    = http,https
logpath = /var/log/nginx/error.log
maxretry = 10

# Nginx Botsearch
[nginx-botsearch]
enabled = true
port     = http,https
logpath  = /var/log/nginx/access.log
maxretry = 2

# Nginx Bad Request
[nginx-badbots]
enabled  = true
port     = http,https
logpath  = /var/log/nginx/access.log
maxretry = 2
{% endif %}

{% if 'dbservers' in group_names %}
# PostgreSQL
[postgresql]
enabled  = false  # Enable if PostgreSQL logs authentication failures
port     = {{ postgres_port | default(5432) }}
logpath  = /var/log/postgresql/postgresql-*.log
maxretry = 5
{% endif %}

# Recidive - Ban repeat offenders for longer
[recidive]
enabled  = true
logpath  = /var/log/fail2ban.log
bantime  = 604800  # 1 week
findtime = 86400   # 1 day
maxretry = 5
