- name: 'Basic Ubuntu/Debian server setup'

  hosts: 'hetzner'
  become: true
  become_user: root

  tasks:
    - name: 'Update all packages'
      ansible.builtin.apt:
        name: '*'
        state: latest
        update_cache: true

    - name: "Install dependencies"
      ansible.builtin.apt:
        pkg:
          - curl
          - ca-certificates
          - git
          - gnupg
          - wget
          - apt-transport-https
          - software-properties-common
          - htop
          - zsh
        update_cache: true

    - name: 'Create keyrings directory'
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: 'Download Docker GPG key'
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /tmp/docker.gpg
        mode: '0644'

    - name: 'Dearmor Docker GPG key'
      ansible.builtin.shell: |
        set -o pipefail
        gpg --dearmor < /tmp/docker.gpg > /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg
      args:
        executable: /bin/bash
        creates: /etc/apt/keyrings/docker.gpg

    - name: 'Add Docker repository'
      ansible.builtin.copy:
        content: >-
          deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.gpg]
          https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        dest: /etc/apt/sources.list.d/docker.list
        mode: '0644'

    - name: 'Install Docker'
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        update_cache: true

    - name: "Create management user"
      ansible.builtin.user:
        append: true
        shell: /bin/zsh
        groups: docker,sudo,users
        name: cc
        create_home: true

    - name: 'Download Oh My Zsh installer'
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /tmp/install_omz.sh
        mode: '0755'
      become: true
      become_user: cc

    - name: 'Install Oh My Zsh'
      ansible.builtin.command: /tmp/install_omz.sh --unattended
      args:
        creates: /home/cc/.oh-my-zsh
      become: true
      become_user: cc

    - name: 'Clone zsh-autosuggestions plugin'
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: /home/cc/.oh-my-zsh/custom/plugins/zsh-autosuggestions
        version: master
      become: true
      become_user: cc

    - name: 'Clone zsh-syntax-highlighting plugin'
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: /home/cc/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
        version: master
      become: true
      become_user: cc

    - name: 'Create .ssh directory'
      ansible.builtin.file:
        path: /home/cc/.ssh
        state: directory
        mode: '0700'
        owner: cc
        group: cc

    - name: 'Setup SSH authorized keys'
      ansible.builtin.copy:
        content: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPGpHkdoJOr4anzQ/U7TBmbx5kBr3VDNCLmYnc2W/3Nu"
        dest: /home/cc/.ssh/authorized_keys
        mode: '0600'
        owner: cc
        group: cc

    - name: 'Configure .zshrc'
      ansible.builtin.copy:
        content: |
          export ZSH="$HOME/.oh-my-zsh"
          ZSH_THEME="strug"
          plugins=(git zsh-autosuggestions zsh-syntax-highlighting)
          source $ZSH/oh-my-zsh.sh
        dest: /home/cc/.zshrc
        mode: '0644'
        owner: cc
        group: cc
