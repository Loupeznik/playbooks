- name: 'Setup GitHub Actions Runner'

  hosts: 'github_runners'
  become: true
  become_user: root

  vars:
    github_url: "{{ github_repo_url }}"
    github_token: "{{ github_runner_token }}"
    runner_name: "{{ github_runner_name | default(ansible_hostname) }}"
    runner_labels: "{{ github_runner_labels | default('self-hosted,Linux,X64') }}"
    runner_user: "{{ github_runner_user | default('ghrunner') }}"
    runner_version: "2.328.0"
    runner_dir: "{{ github_runner_dir | default('/opt/ci/gh/' + (github_runner_name | default(ansible_hostname))) }}"

  tasks:
    - name: 'Update all packages'
      ansible.builtin.apt:
        name: '*'
        state: latest
        update_cache: true

    - name: 'Install dependencies'
      ansible.builtin.apt:
        pkg:
          - curl
          - git
          - jq
          - libicu-dev
          - ca-certificates
          - tar
        update_cache: true

    - name: 'Create runner user'
      ansible.builtin.user:
        name: "{{ runner_user }}"
        shell: /bin/bash
        create_home: true
        system: true
        groups: docker
        append: true

    - name: 'Create runner directory'
      ansible.builtin.file:
        path: "{{ runner_dir }}"
        state: directory
        owner: "{{ runner_user }}"
        group: "{{ runner_user }}"
        mode: '0755'

    - name: 'Download GitHub Actions runner'
      ansible.builtin.get_url:
        url: "https://github.com/actions/runner/releases/download/v{{ runner_version }}/actions-runner-linux-x64-{{ runner_version }}.tar.gz"
        dest: "/tmp/actions-runner-linux-x64-{{ runner_version }}.tar.gz"
        mode: '0644'

    - name: 'Extract runner archive'
      ansible.builtin.unarchive:
        src: "/tmp/actions-runner-linux-x64-{{ runner_version }}.tar.gz"
        dest: "{{ runner_dir }}"
        remote_src: true
        owner: "{{ runner_user }}"
        group: "{{ runner_user }}"

    - name: 'Configure runner'
      ansible.builtin.shell: |
        ./config.sh --unattended \
          --url "{{ github_url }}" \
          --token "{{ github_token }}" \
          --name "{{ runner_name }}" \
          --labels "{{ runner_labels }}" \
          --replace
      args:
        chdir: "{{ runner_dir }}"
        executable: /bin/bash
      become: true
      become_user: "{{ runner_user }}"

    - name: 'Install runner service'
      ansible.builtin.shell: |
        ./svc.sh install {{ runner_user }}
      args:
        chdir: "{{ runner_dir }}"
        executable: /bin/bash

    - name: 'Start runner service'
      ansible.builtin.shell: |
        ./svc.sh start
      args:
        chdir: "{{ runner_dir }}"
        executable: /bin/bash

    - name: 'Cleanup downloaded archive'
      ansible.builtin.file:
        path: "/tmp/actions-runner-linux-x64-{{ runner_version }}.tar.gz"
        state: absent
